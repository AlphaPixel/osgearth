/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2012 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTHFEATURES_FILTER_H
#define OSGEARTHFEATURES_FILTER_H 1

#include <osgEarthFeatures/Common>
#include <osgEarthSymbology/Stroke>
#include <osg/Geometry>

namespace osgEarth { namespace Features
{
    using namespace osgEarth::Symbology;

    /**
     * Triangulates a line string into a buffered geometry.
     *
     * The resulting geometry will retain the original line string
     * vertices as a "spine", and will include triangles on either
     * side of the spine that form the buffered polygons. Depending
     * on the Stroke, the geometry may also have triangulated end caps.
     */
    class OSGEARTHFEATURES_EXPORT PolygonizeLinesOperator
    {
    public:
        /**
         * Construct the operator
         * @param[in ] stroke Line rendering properties
         */
        PolygonizeLinesOperator(const Stroke& stoke);

        /**
         * Run the polygonizer.
         * @param[in ] input       Line string to polygonize
         * @param[in ] world2local Localization matrix
         */
        osg::Geometry* operator()(
            const std::vector<osg::Vec3d>& input,
            const osg::Matrix&             world2local) const;

    protected:
        Stroke _stroke;
    };

} } // namespace osgEarth::Features

#endif // OSGEARTHFEATURES_FILTER_H
